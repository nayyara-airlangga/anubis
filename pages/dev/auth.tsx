import axios from "axios"
import Head from "next/head"
import { useRouter } from "next/router"
import React, { useEffect, useState } from "react"

const AuthTestPage = () => {
  const router = useRouter()

  const [user, setUser] = useState<any>()
  const [loginData, setLoginData] = useState({
    username: "",
    password: "",
    rememberMe: false,
  })

  const fetchUser = async () => {
    try {
      const { data } = await axios.get("/api/users/me")
      setUser(data.user)
    } catch (error: any) {
      console.log(error.response)
    }
  }

  const logout = async (event: React.MouseEvent<HTMLButtonElement>) => {
    try {
      await axios.post("/api/auth/logout")
      router.reload()
    } catch (error: any) {
      console.log(error.response.data)
    }
  }

  useEffect(() => {
    fetchUser()
  }, [])

  const handleLoginForm = (
    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const value = event.target.value

    setLoginData({ ...loginData, [event.target.name]: value })
  }

  const submitLogin = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault()

    try {
      await axios.post("/api/auth/login", loginData)
      router.reload()
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <div className="w-full relative h-screen">
      <Head>
        <title>Snippets | Auth Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form
        onSubmit={submitLogin}
        className="absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2"
      >
        <h1 className="text-white text-xl text-center mb-4">
          {user ? `Welcome, ${user.username}` : "Enter your credentials"}
        </h1>
        <input
          type="text"
          name="username"
          placeholder="Username or Email"
          className="bg-white block mb-4 rounded-md p-2.5"
          value={loginData.username}
          onChange={handleLoginForm}
        />
        <input
          type="password"
          name="password"
          placeholder="Password"
          className="bg-white mb-4 rounded-md p-2.5 block"
          value={loginData.password}
          onChange={handleLoginForm}
        />
        <div className="flex flex-row">
          <input
            id="rememberMe"
            type="checkbox"
            name="rememberMe"
            placeholder="Password"
            className="bg-white mb-4 rounded-md p-2.5 w-6 h-6"
            checked={loginData.rememberMe}
            onChange={(event) => {
              setLoginData({ ...loginData, rememberMe: !loginData.rememberMe })
            }}
          />
          <label className="pl-4 text-white" htmlFor="rememberMe">
            Remember Me
          </label>
        </div>
        <button
          type="submit"
          className="duration-300 active:bg-cyan-800 hover:bg-cyan-700 bg-cyan-600 rounded-md p-2.5 w-full mb-4"
        >
          Submit
        </button>
        <button
          type="button"
          disabled={!user}
          onClick={logout}
          className="duration-300 active:bg-fuchsia-800 hover:bg-fuchsia-700 bg-fuchsia-600 rounded-md p-2.5 w-full"
        >
          Logout
        </button>
      </form>
    </div>
  )
}

export default AuthTestPage
